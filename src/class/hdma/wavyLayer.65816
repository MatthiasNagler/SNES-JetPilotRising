/**
* hdma object that creates wavy background effect
* 
*/
.include "src/class/hdma/wavyLayer.h"
.section "hdma.wavyLayer"

/**
* @param 1 <int, 8bit> target layer (0-3)
*/
  METHOD init
  sep #$20

  lda OBJECT.CALL.ARG.1,s
  cmp.b #BG.LAYER.3 + 1
  bcc +
	pha
    TRIGGER_ERROR E_BadBgLayer
	stp

+
  asl a
  clc
  adc #BG1HOFS & $ff
  sta hdma.target

  rep #$31
  lda #WAVY_LAYER.TABLE.LENGTH
  sta hdma.ramBuffer.length
  jsr hdma.library.allocateBuffer


  lda.w #GLOBAL.wramBuffer.start
  clc
  adc hdma.ramBuffer.start
  tax
  sep #$20
  lda #RAM
  jsr hdma.library.setTableAdress

  lda hdma.flags
  ora #DMAP_1_REG_WRITE_TWICE
  sta hdma.flags

  rep #$31
  jsr _initTable
  jmp hdma.library.start

  METHOD play
  jmp _updateTable

  METHOD kill
  jsr hdma.library.stop
  jsr hdma.library.deallocateBuffer
  jmp object.library.kill

_updateTable:
  AX16
  pha

  lda this.tablePointer
  sta 1,s
  asl a
  clc
  adc 1,s
  clc
  adc hdma.ramBuffer.start
  clc
  adc #GLOBAL.wramBuffer.start
  tax
  lda #RAM
  jsr hdma.library.setTableAdress
  jsr hdma.library.makePhysical

  inc this.tablePointer
  lda this.tablePointer
  cmp #wavyLayerInitLUT.end - wavyLayerInitLUT
  bne +
    stz this.tablePointer

+
  pla
  rts

_initTable:
  AX16
  lda.w #$dd
  sta this.tablePointer
  lda.w #$30
  sta this.lutPointer
  lda #$2a0
  clc
  adc hdma.ramBuffer.start
  sta this.tableEnd
  ldx hdma.ramBuffer.start

-	lda #2
	sta.w GLOBAL.wramBuffer.start,x
	inx

	phx
	lda this.lutPointer
	and.w #$3f
	tax
	lda.l wavyLayerInitLUT,x
	plx

  and.w #$ff
	clc
  adc #8
  and.w #$ff
 
	sta.w GLOBAL.wramBuffer.start,x

	inc this.lutPointer
	dec this.tablePointer
	inx
	inx
	cpx this.tableEnd
	bne -

  ;terminate table
  stz.w GLOBAL.wramBuffer.start,x
  stz this.tablePointer
  rts
  
  CLASS Hdma.wavyLayer
.ends	
	
